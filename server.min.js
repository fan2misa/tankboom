var Enum={Scene:{Wait:"wait",MainMenu:"mainmenu",InGame:"ingame"},Game:{Type:{DeadMatch:"deadmatch",DeadMatchTeam2:"deadmatchteam2",DeadMatchTeam4:"deadmatchteam4",CaptureFlag:"captureflag"}},Team:{Default:"default",Blue:"blue",Red:"red",Green:"green",Yellow:"yellow"}};var MAP={getPoint:function(points,team){var pts=points.filter(function(element){return null===team||Enum.Team.Default===team||element.team===undefined||element.team===team});return pts[Math.floor(Math.random()*pts.length)]},clonePoints:function(game,map){return MAP[game][map].points.slice(0)}};MAP[Enum.Game.Type.DeadMatch]={};MAP[Enum.Game.Type.DeadMatchTeam2]={};MAP[Enum.Game.Type.DeadMatchTeam4]={};MAP[Enum.Game.Type.CaptureFlag]={};MAP[Enum.Game.Type.CaptureFlag].map1={points:[{x:6,y:2,team:"blue",angle:"west"},{x:3,y:4,team:"blue",angle:"west"},{x:6,y:9.5,team:"blue",angle:"west"},{x:3,y:15,team:"blue",angle:"west"},{x:6,y:17,team:"blue",angle:"west"},{x:28,y:2,team:"red",angle:"east"},{x:31,y:4,team:"red",angle:"east"},{x:28,y:9.5,team:"red",angle:"east"},{x:31,y:15,team:"red",angle:"east"},{x:28,y:17,team:"red",angle:"east"}]};MAP[Enum.Game.Type.DeadMatchTeam2].map1={points:[{x:6,y:2,team:"blue",angle:"west"},{x:3,y:4,team:"blue",angle:"west"},{x:6,y:9.5,team:"blue",angle:"west"},{x:3,y:15,team:"blue",angle:"west"},{x:6,y:17,team:"blue",angle:"west"},{x:28,y:2,team:"red",angle:"east"},{x:31,y:4,team:"red",angle:"east"},{x:28,y:9.5,team:"red",angle:"east"},{x:31,y:15,team:"red",angle:"east"},{x:28,y:17,team:"red",angle:"east"}]};MAP[Enum.Game.Type.DeadMatchTeam4].map1={points:[{x:6,y:2,team:"blue",angle:"west"},{x:3,y:3,team:"blue",angle:"west"},{x:2,y:6,team:"blue",angle:"west"},{x:6,y:17,team:"red",angle:"west"},{x:3,y:16,team:"red",angle:"west"},{x:2,y:13,team:"red",angle:"west"},{x:28,y:2,team:"green",angle:"east"},{x:31,y:3,team:"green",angle:"east"},{x:32,y:6,team:"green",angle:"east"},{x:28,y:17,team:"yellow",angle:"east"},{x:31,y:16,team:"yellow",angle:"east"},{x:32,y:13,team:"yellow",angle:"east"}]};MAP[Enum.Game.Type.DeadMatch].map1={points:[{x:2,y:2,angle:"west-south"},{x:2,y:17,angle:"north-west"},{x:32,y:2,angle:"south-east"},{x:32,y:17,angle:"east-north"},{x:9,y:9.5,angle:"west"},{x:25,y:9.5,angle:"east"}]};var Game={getTeamName:function(key){switch(key){case Enum.Team.Blue:return"EQUIPE BLEU";case Enum.Team.Red:return"EQUIPE ROUGE";case Enum.Team.Green:return"EQUIPE VERT";case Enum.Team.Yellow:return"EQUIPE JAUNE"}return key}};Game[Enum.Game.Type.DeadMatch]={};Game[Enum.Game.Type.DeadMatchTeam2]={};Game[Enum.Game.Type.DeadMatchTeam4]={};Game[Enum.Game.Type.CaptureFlag]={};Game[Enum.Game.Type.CaptureFlag]={players:{},teams:{},construct:function(){this.teams[Enum.Team.Blue]=0;this.teams[Enum.Team.Red]=0},getDefaultTeam:function(){return Enum.Team.Blue},startGame:function(){for(var i in this.teams){if(this.teams[i]<=0){delete this.teams[i]}}},addPlayer:function(user){this.players[user.id]=user;this.teams[user.team]++},removePlayer:function(user){this.teams[user.team]--;if(this.teams[user.team]<=0){delete this.teams[user.team]}delete this.players[user.id]},isEndGame:function(){return Object.keys(this.teams).length===1},endGame:function(){this.players={};this.teams={}},getWinner:function(){return Game.getTeamName(Object.keys(this.teams)[0])}};Game[Enum.Game.Type.DeadMatch]={players:{},healt:3,life:3,construct:function(){this.players={}},getDefaultTeam:function(){return"default"},startGame:function(){var points=MAP.clonePoints(Server.game,Server.map);for(var i in this.players){this.players[i].healt=this.healt;this.players[i].life=this.life;var point=MAP.getPoint(points,this.players[i].team);points.splice(points.indexOf(point),1);this.players[i].position=point}},addPlayer:function(user){this.players[user.id]=user},removePlayer:function(id){delete this.players[id]},respawn:function(id){this.players[id].position=MAP.getPoint(MAP.clonePoints(Server.game,Server.map),this.players[id].team);this.players[id].healt=this.healt},isEndGame:function(){return Object.keys(this.players).length===1},endGame:function(){this.players={}},getWinner:function(){return this.players[Object.keys(this.players)[0]].username}};Game[Enum.Game.Type.DeadMatchTeam2]={players:{},teams:{},healt:3,life:3,construct:function(){this.players={};this.teams[Enum.Team.Blue]=0;this.teams[Enum.Team.Red]=0},getDefaultTeam:function(){return Enum.Team.Blue},startGame:function(){var points=MAP.clonePoints(Server.game,Server.map);for(var i in this.players){this.players[i].healt=this.healt;this.players[i].life=this.life;var point=MAP.getPoint(points,this.players[i].team);points.splice(points.indexOf(point),1);this.players[i].position=point}for(var i in this.teams){if(this.teams[i]<=0){delete this.teams[i]}}},addPlayer:function(user){this.players[user.id]=user;this.teams[user.team]++},removePlayer:function(id){this.teams[this.players[id].team]--;if(this.teams[this.players[id].team]<=0){delete this.teams[this.players[id].team]}delete this.players[this.players[id].id]},respawn:function(id){Game[Server.game].players[id].position=MAP.getPoint(MAP.clonePoints(Server.game,Server.map),Game[Server.game].players[id].team);Game[Server.game].players[id].healt=this.healt},isEndGame:function(){return Object.keys(this.teams).length===1},endGame:function(){this.players={};this.teams={}},getWinner:function(){return Game.getTeamName(Object.keys(this.teams)[0])}};Game[Enum.Game.Type.DeadMatchTeam4]={players:{},teams:{},healt:3,life:3,construct:function(){this.players={};this.teams[Enum.Team.Blue]=0;this.teams[Enum.Team.Red]=0;this.teams[Enum.Team.Green]=0;this.teams[Enum.Team.Yellow]=0},getDefaultTeam:function(){return Enum.Team.Blue},startGame:function(){var points=MAP.clonePoints(Server.game,Server.map);for(var i in this.players){this.players[i].healt=this.healt;this.players[i].life=this.life;var point=MAP.getPoint(points,this.players[i].team);points.splice(points.indexOf(point),1);this.players[i].position=point}for(var i in this.teams){if(this.teams[i]<=0){delete this.teams[i]}}},addPlayer:function(user){this.players[user.id]=user;this.teams[user.team]++},removePlayer:function(id){this.teams[this.players[id].team]--;if(this.teams[this.players[id].team]<=0){delete this.teams[this.players[id].team]}delete this.players[this.players[id].id]},respawn:function(id){Game[Server.game].players[id].position=MAP.getPoint(MAP.clonePoints(Server.game,Server.map),Game[Server.game].players[id].team);Game[Server.game].players[id].healt=this.healt},isEndGame:function(){return Object.keys(this.teams).length===1},endGame:function(){this.players={};this.teams={}},getWinner:function(){return Game.getTeamName(Object.keys(this.teams)[0])}};var Server={scene:null,game:null,users:{},userscount:0,timer:null,interval:null,map:null,players:[],start:function(){this.scene=Enum.Scene.MainMenu;this.game=Enum.Game.Type.DeadMatch},addUser:function(id,username){this.users[id]={id:id,username:username,team:Game[this.game].getDefaultTeam(),ready:false};Server.userscount++},refreshUsersTeam:function(){for(var i in this.users){this.users[i].ready=false;this.users[i].team=Game[this.game].getDefaultTeam()}},allUsersReady:function(){if(Server.userscount>0){for(var i in this.users){if(!this.users[i].ready){return false}}return true}return false},setAllUsersUnready:function(){for(var i in this.users){this.users[i].ready=false}},noPlayers:function(){if(this.users==null)return true;if(this.users.length>0)return false;if(this.users.length===0)return true;if(typeof this.users!=="object")return true;for(var key in this.users){if(hasOwnProperty.call(this.users,key))return false}return true},startGame:function(){this.scene=Enum.Scene.InGame;this.map="map"+(Math.floor(Math.random()*1)+1).toString();Game[this.game].construct();for(var i in this.users){Game[this.game].addPlayer(this.users[i])}Game[this.game].startGame()}};var app=require("express")();var http=require("http").Server(app);var io=require("socket.io")(http);app.use("/",require("express").static(__dirname+"/web"));app.get("/",function(req,res){res.sendFile(__dirname+"/web/index.html")});io.on("connection",function(socket){socket.on("USER_CONNECT",onUserConnect);socket.on("disconnect",onDisconnect);socket.on("CHANGE_GAME_TYPE",onChangeGameType);socket.on("USER_CHANGE_TEAM",onUserChangeTeam);socket.on("USER_READY",onUserReady);socket.on("SET_POSITION",onSetPosition);socket.on("SET_TRACER",onSetTracer);socket.on("SET_FIRE",onSetFire);socket.on("SET_TANK_TOUCH",onSetTankTouch);socket.on("SET_TANK_EXPLOSE",onSetTankExplose);function onUserConnect(data){Server.addUser(socket.id,data);console.log(Server.users[socket.id].username+" HAS CONNECTED");socket.emit("USER_CONNECT_SUCCESS",{scene:Server.scene!==Enum.Scene.InGame?Server.scene:Enum.Scene.Wait,game:Server.game,users:Server.users,user:Server.users[socket.id]});socket.broadcast.emit("NEW_USER_CONNECTED",{newUser:Server.users[socket.id]});if(Server.scene===Enum.Scene.MainMenu){socket.broadcast.emit("REFRESH_USERS",{users:Server.users})}}function onDisconnect(){if(Server.scene===Enum.Scene.InGame){if(Game[Server.game].players.hasOwnProperty(socket.id)){Game[Server.game].players[socket.id].life=0;onSetTankExplose()}}if(Server.users.hasOwnProperty(socket.id)){console.log(Server.users[socket.id].username+" HAS DISCONNECTED");delete Server.users[socket.id];Server.userscount--}if(Server.noPlayers()){Server.start()}else{if(Server.scene===Enum.Scene.MainMenu){socket.broadcast.emit("REFRESH_USERS",{users:Server.users})}}}function onChangeGameType(gameType){Server.game=gameType;console.log(Server.users[socket.id].username+" SET "+Server.game);if(Server.scene===Enum.Scene.MainMenu){Server.refreshUsersTeam();io.sockets.emit("GAME_TYPE_CHANGED",{game:Server.game,users:Server.users})}}function onUserChangeTeam(team){Server.users[socket.id].team=team;Server.users[socket.id].ready=false;console.log(Server.users[socket.id].username+" TEAM IS "+Server.users[socket.id].team);if(Server.scene===Enum.Scene.MainMenu){io.sockets.emit("REFRESH_USERS",{users:Server.users})}}function onUserReady(){Server.users[socket.id].ready=!Server.users[socket.id].ready;console.log(Server.users[socket.id].username+" IS "+(Server.users[socket.id].ready?"READY":"UNREADY"));if(Server.scene===Enum.Scene.MainMenu){io.sockets.emit("REFRESH_USERS",{users:Server.users});if(Server.allUsersReady()){Server.timer=3;io.sockets.emit("SET_TIMER",{timer:Server.timer});Server.interval=setInterval(function(){Server.timer--;if(Server.timer<=0){Server.timer=null}io.sockets.emit("SET_TIMER",{timer:Server.timer});if(Server.timer<=0){Server.startGame();io.sockets.emit("START_GAME",{map:Server.map,scene:Server.scene,users:Game[Server.game].players});clearInterval(Server.interval)}},1e3)}else{clearInterval(Server.interval);io.sockets.emit("SET_TIMER",{timer:null})}}}function onSetPosition(data){socket.broadcast.emit("POSITION_SENDED",{id:socket.id,position:data.position})}function onSetTracer(data){socket.broadcast.emit("TRACE_SENDED",{id:socket.id,position:data.position})}function onSetFire(data){socket.broadcast.emit("FIRE_SENDED",{id:socket.id,position:data.position})}function onSetTankTouch(data){console.log(Server.users[data.id].username+" IS TOUCHED");io.sockets.emit("TANK_TOUCHED",{id:data.id,hit:data.hit})}function onSetTankExplose(){console.log(Server.users[socket.id].username+" IS KILLED");socket.broadcast.emit("TANK_EXPLOSED",{id:socket.id});Game[Server.game].players[socket.id].life--;if(Game[Server.game].players[socket.id].life<=0){Game[Server.game].removePlayer(socket.id);if(Game[Server.game].isEndGame()){io.sockets.emit("END_GAME",{winner:Game[Server.game].getWinner()});setTimeout(function(){Game[Server.game].endGame();Server.scene=Enum.Scene.MainMenu;Server.setAllUsersUnready();io.sockets.emit("RETURN_TO_MENU",{users:Server.users,scene:Server.scene})},5e3)}}else{setTimeout(function(){Game[Server.game].respawn(socket.id);socket.emit("RESPAWN",{user:Game[Server.game].players[socket.id]});socket.broadcast.emit("TANK_RESPAWNED",{user:Game[Server.game].players[socket.id]})},5e3)}}});http.listen(3e3,function(){Server.start();console.log("listening on *:3000")});